Mounting /home/guest...
Welcome to foobar version 1-335-gea1c3e3-beta (2021-12-15T20:22:45.225403)

Google has a code challenge ready for you.
Success! You've managed to infiltrate Commander Lambda's evil organization, and finally earned yourself an entry-level position as a Minion on their space station. From here, you just might be able to subvert Commander Lambda's plans to use the LAMBCHOP doomsday device to destroy Bunny Planet. Problem is, Minions are the lowest of the low in the Lambda hierarchy. Better buck up and get working, or you'll never make it to the top...

Warning! Your invitation may expire if you leave this page. Click here to sign in so you can save your progress and resume later.

For a list of commands type help. To get started with your first challenge type request.

Mounting /home/Pattty847...
Logged in as Pattty847.
foobar:~/ Pattty847$ request
You are about to begin a TIME-LIMITED challenge. You will have 7 days to complete each newly requested challenge or LOSE ACCESS to this site.
Do you wish to proceed and start the timer on your first challenge?
[Y]es or [N]o: Y
Requesting challenge...
Commander Lambda sure is a task-master, aren't they? You're being worked to the bone!
New challenge "Skipping Work" added to your home folder.
Time to solve: 168 hours.
foobar:~/ Pattty847$ .
.: command not found. Type help for a list of commands
foobar:~/ Pattty847$ /
Scram gravy ain't wavey!
/: command not found. Type help for a list of commands
foobar:~/ Pattty847$ help
Use the following shell commands:

cd	change directory [dir_name]
cat	print file [file_name]
deleteme	delete all of your data associated with foobar
edit	open file in editor [file_name]
feedback	provide feedback on foobar
less	print a file a page at a time [file_name]
ls	list directory contents [dir_name]
request	request new challenge
status	print progress
submit	submit final solution file for assessment [file_name]
verify	runs tests on solution file [file_name]

Keyboard help:

Ctrl + S	save the open file [when editor is focused]
Ctrl + E	close the editor [when editor is focused]

Toggle between the editor and terminal using ESC followed by TAB, then activate with ENTER.

foobar:~/ Pattty847$ cd .
cd: .: No such file or directory
foobar:~/ Pattty847$ ls
skipping-work
journal.txt
start_here.txt
foobar:~/ Pattty847$ edit skipping-work
edit: skipping-work: Is a directory
foobar:~/ Pattty847$ edit start_here.txt
File not editable
foobar:~/ Pattty847$ less start_here.txt
foobar:~/ Pattty847$ request
Requesting challenge...
Max active challenge count reached.
foobar:~/ Pattty847$ cat start_here.txt
Type request to request a challenge. Type help for a list of commands.
foobar:~/ Pattty847$ cat journal.txt
Success! You've managed to infiltrate Commander Lambda's evil organization, and finally earned yourself an entry-level position as a Minion on their space station. From here, you just might be able to subvert Commander Lambda's plans to use the LAMBCHOP doomsday device to destroy Bunny Planet. Problem is, Minions are the lowest of the low in the Lambda hierarchy. Better buck up and get working, or you'll never make it to the top...

Commander Lambda sure is a task-master, aren't they? You're being worked to the bone!
foobar:~/ Pattty847$ ls
skipping-work
journal.txt
start_here.txt
foobar:~/ Pattty847$ cd skipping-work
foobar:~/skipping-work Pattty847$ ls
Solution.java
constraints.txt
readme.txt
solution.py
foobar:~/skipping-work Pattty847$ cat readme.txt
Skipping Work
=============

Commander Lambda is all about efficiency, including using her the bunny workers for manual labor. But no one's been properly monitoring the labor shifts for a while and they've gotten quite mixed up. You've been given the task of fixing them, but after you wrote up new shifts you realized that some bunny workers had been transferred to a different area and aren't available for their assigned shifts. Manually sorting through each shift list to compare against work area lists will take forever -- remember, Commander Lambda loves efficiency!

Given two almost identical lists of worker IDs x and y where one of the lists contains an additional ID, write a function solution(x, y) that compares the lists and returns the additional ID.

For example, given the lists x = [13, 5, 6, 2, 5] and y = [5, 2, 5, 13], the function solution(x, y) would return 6 because the list x contains the integer 6 and the list y doesn't. Given the lists x = [14, 27, 1, 4, 2, 50, 3, 1] and y = [2, 4, -4, 3, 1, 1, 14, 27, 50], the function solution(x, y) would return -4 because the list y contains the integer -4 and the list x doesn't.

In each test case, the lists x and y will always contain n non-unique integers where n is at least 1 but never more than 99, and one of the lists will contain an additional unique integer which should be returned by the function. The same n non-unique integers will be present on both lists, but they might appear in a different order like in the examples above. Commander Lambda likes to keep the numbers short, so every worker ID will be between -1000 and 1000.

Languages
=========

To provide a Python solution, edit solution.py
To provide a Java solution, edit Solution.java

Test cases
==========
Your code should pass the following test cases.
Note that it may also be run against hidden test cases not shown here.

-- Python cases --
Input:
solution.solution([13, 5, 6, 2, 5], [5, 2, 5, 13])
Output:
    6

Input:
solution.solution([14, 27, 1, 4, 2, 50, 3, 1], [2, 4, -4, 3, 1, 1, 14, 27, 50])
Output:
    -4

-- Java cases --
Input:
Solution.solution({13, 5, 6, 2, 5}, {5, 2, 5, 13})
Output:
    6

Input:
Solution.solution({14, 27, 1, 4, 2, 50, 3, 1}, {2, 4, -4, 3, 1, 1, 14, 27, 50})
Output:
    -4

Use verify [file] to test your solution and see how it does. When you are finished editing your code, use submit [file] to submit your answer. If your solution passes the test cases, it will be removed from your home folder.
foobar:~/skipping-work Pattty847$ edit solution.py
foobar:~/skipping-work Pattty847$ verify solution.py
Verifying solution...
Test 1 failed 
Test 2 failed 
Test 3 failed  [Hidden]
Test 4 failed  [Hidden]
Test 5 failed  [Hidden]
foobar:~/skipping-work Pattty847$ verify solution.py
Verifying solution...
Test 1 failed 
Test 2 failed 
Test 3 failed  [Hidden]
Test 4 failed  [Hidden]
Test 5 failed  [Hidden]
foobar:~/skipping-work Pattty847$ veryify solution.py
1506 nix nix!
veryify: command not found. Type help for a list of commands
foobar:~/skipping-work Pattty847$ verify solution.py
Verifying solution...
Test 1 failed 
Test 2 failed 
Test 3 failed  [Hidden]
Test 4 failed  [Hidden]
Test 5 failed  [Hidden]
foobar:~/skipping-work Pattty847$ def solution(x, y):
    if(len(x) > len(y)):
        z = (set(x) - set(y))
        for i in z:
            return i
    else:
        z = (set(y) - set(x))
        for 
def: command not found. Type help for a list of commands
foobar:~/skipping-work Pattty847$ verify solution.py
Verifying solution...
All test cases passed. Use submit solution.py to submit your solution
foobar:~/skipping-work Pattty847$ submit solution.py
Are you sure you want to submit your solution?
[Y]es or [N]o: y
Submitting solution...
You survived a week in Commander Lambda's organization, and you even managed to get yourself promoted. Hooray! Henchmen still don't have the kind of security access you'll need to take down Commander Lambda, though, so you'd better keep working. Chop chop!
Submission: SUCCESSFUL. Completed in: 29 mins, 13 secs.









                  @@ @@
                /@%%%$%@
                @((%%/////@
               @///@~//// @
               @//@///////@
               @//%@~~~~~@
             //@$$$@////~~@
            @   %/@%//$////@@
           @////(((((/~       ///%%//////@//
         @////////       %@~~~~~~~/////@@\
         @////////        % ~~~~~~~~~///@@
         @/////(       ~~~ ~~~~~~~~////////@
         @////          ~~~~~~~~~~~~~~~///@
           @@\//       ~~~~~~~~~~~~~~~//@@@@@
              @@       ~~~~~~~~~~~~~(%$$$$$%%@
                @@      ~~~~~~~~~~(((($$$$$$%%@@
                   @      ~~~~~~~~(///$$$$$$$%%@
                  @      $$/    ~~~~((@$$$$$%%@
                @     %       (((((((((%@@@$$$@
                @@%%   @ /   $$$$%%%%%%%@
                       @////@@@@@@@@@@@@
Level 1 complete
You are now on level 2
Challenges left to complete level: 2

Level 1: 100% [==========================================]
Level 2:   0% [..........................................]
Level 3:   0% [..........................................]
Level 4:   0% [..........................................]
Level 5:   0% [..........................................]

Type request to request a new challenge now, or come back later.
foobar:~/ Pattty847$ request
Requesting challenge...
The latest gossip in the henchman breakroom is that "LAMBCHOP" stands for "Lambda's Anti-Matter Biofuel Collision Hadron Oxidating Potentiator". You're pretty sure it runs on diesel, not biofuel, but you can at least give the commander credit for trying.
New challenge "En Route Salute" added to your home folder.
Time to solve: 168 hours.
foobar:~/ Pattty847$ ls
en-route-salute
journal.txt
start_here.txt
foobar:~/ Pattty847$ cd en-route-salute
foobar:~/en-route-salute Pattty847$ ls
Solution.java
constraints.txt
readme.txt
solution.py
foobar:~/en-route-salute Pattty847$ cat readme.txt
En Route Salute
===============

Commander Lambda loves efficiency and hates anything that wastes time. The Commander is a busy lamb, after all! Henchmen who identify sources of inefficiency and come up with ways to remove them are generously rewarded. You've spotted one such source, and you think solving it will help you build the reputation you need to get promoted.

Every time the Commander's employees pass each other in the hall, each of them must stop and salute each other -- one at a time -- before resuming their path. A salute is five seconds long, so each exchange of salutes takes a full ten seconds (Commander Lambda's salute is a bit, er, involved). You think that by removing the salute requirement, you could save several collective hours of employee time per day. But first, you need to show the Commander how bad the problem really is.

Write a program that counts how many salutes are exchanged during a typical walk along a hallway. The hall is represented by a string. For example:
"--->-><-><-->-"

Each hallway string will contain three different types of characters: '>', an employee walking to the right; '<', an employee walking to the left; and '-', an empty space. Every employee walks at the same speed either to right or to the left, according to their direction. Whenever two employees cross, each of them salutes the other. They then continue walking until they reach the end, finally leaving the hallway. In the above example, they salute 10 times.

Write a function solution(s) which takes a string representing employees walking along a hallway and returns the number of times the employees will salute. s will contain at least 1 and at most 100 characters, each one of -, >, or <.

Languages
=========

To provide a Python solution, edit solution.py
To provide a Java solution, edit Solution.java

Test cases
==========
Your code should pass the following test cases.
Note that it may also be run against hidden test cases not shown here.

-- Python cases --
Input:
solution.solution(">----<")
Output:
    2

Input:
solution.solution("<<>><")
Output:
    4

-- Java cases --
Input:
Solution.solution("<<>><")
Output:
    4

Input:
Solution.solution(">----<")
Output:
    2

Use verify [file] to test your solution and see how it does. When you are finished editing your code, use submit [file] to submit your answer. If your solution passes the test cases, it will be removed from your home folder.
foobar:~/en-route-salute Pattty847$ cat constraints.txt
Java
====
Your code will be compiled using standard Java 8. All tests will be run by calling the solution() method inside the Solution class

Execution time is limited.

Wildcard imports and some specific classes are restricted (e.g. java.lang.ClassLoader). You will receive an error when you verify your solution if you have used a blacklisted class.

Third-party libraries, input/output operations, spawning threads or processes and changes to the execution environment are not allowed.

Your solution must be under 32000 characters in length including new lines and and other non-printing characters.

Python
======
Your code will run inside a Python 2.7.13 sandbox. All tests will be run by calling the solution() function.

Standard libraries are supported except for bz2, crypt, fcntl, mmap, pwd, pyexpat, select, signal, termios, thread, time, unicodedata, zipimport, zlib.

Input/output operations are not allowed.

Your solution must be under 32000 characters in length including new lines and and other non-printing characters.
foobar:~/en-route-salute Pattty847$ solution.py
solution.py: command not found. Type help for a list of commands
foobar:~/en-route-salute Pattty847$ help
Use the following shell commands:

cd	change directory [dir_name]
cat	print file [file_name]
deleteme	delete all of your data associated with foobar
edit	open file in editor [file_name]
feedback	provide feedback on foobar
less	print a file a page at a time [file_name]
ls	list directory contents [dir_name]
request	request new challenge
status	print progress
submit	submit final solution file for assessment [file_name]
verify	runs tests on solution file [file_name]

Keyboard help:

Ctrl + S	save the open file [when editor is focused]
Ctrl + E	close the editor [when editor is focused]

Toggle between the editor and terminal using ESC followed by TAB, then activate with ENTER.

foobar:~/en-route-salute Pattty847$ subit
subit: command not found. Type help for a list of commands
foobar:~/en-route-salute Pattty847$ def solution(s):
    n = 0
    h = 0
    # loop trough range between > from start and < from end ignoring < in beginning and > and end
    for x in range(s.find(">"), len(s) - s[::-1].find("<")):
        # count number of >
        if(s[x] == ">"):
            n+=1
        # count responders by multiplying by 2
        if(s[x] == "<"):
        
def: command not found. Type help for a list of commands
foobar:~/en-route-salute Pattty847$ help
Use the following shell commands:

cd	change directory [dir_name]
cat	print file [file_name]
deleteme	delete all of your data associated with foobar
edit	open file in editor [file_name]
feedback	provide feedback on foobar
less	print a file a page at a time [file_name]
ls	list directory contents [dir_name]
request	request new challenge
status	print progress
submit	submit final solution file for assessment [file_name]
verify	runs tests on solution file [file_name]

Keyboard help:

Ctrl + S	save the open file [when editor is focused]
Ctrl + E	close the editor [when editor is focused]

Toggle between the editor and terminal using ESC followed by TAB, then activate with ENTER.

foobar:~/en-route-salute Pattty847$ cd
foobar:~/ Pattty847$ ls
en-route-salute
journal.txt
start_here.txt
foobar:~/ Pattty847$ cd en-route-salute
foobar:~/en-route-salute Pattty847$ ls
Solution.java
constraints.txt
readme.txt
solution.py
foobar:~/en-route-salute Pattty847$ solution.py
solution.py: command not found. Type help for a list of commands
foobar:~/en-route-salute Pattty847$ edit solution.py
foobar:~/en-route-salute Pattty847$ verify solution.py
Verifying solution...
All test cases passed. Use submit solution.py to submit your solution
foobar:~/en-route-salute Pattty847$ submit solution.py
Are you sure you want to submit your solution?
[Y]es or [N]o: y
Submitting solution...
Submission: SUCCESSFUL. Completed in: 2 hrs, 33 mins, 14 secs.

Current level: 2
Challenges left to complete level: 1

Level 1: 100% [==========================================]
Level 2:  50% [=====================.....................]
Level 3:   0% [..........................................]
Level 4:   0% [..........................................]
Level 5:   0% [..........................................]

Type request to request a new challenge now, or come back later.
foobar:~/ Pattty847$ help
Use the following shell commands:

cd	change directory [dir_name]
cat	print file [file_name]
deleteme	delete all of your data associated with foobar
edit	open file in editor [file_name]
feedback	provide feedback on foobar
less	print a file a page at a time [file_name]
ls	list directory contents [dir_name]
request	request new challenge
status	print progress
submit	submit final solution file for assessment [file_name]
verify	runs tests on solution file [file_name]

Keyboard help:

Ctrl + S	save the open file [when editor is focused]
Ctrl + E	close the editor [when editor is focused]

Toggle between the editor and terminal using ESC followed by TAB, then activate with ENTER.